{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and provides automated code quality analysis including code smells, design patterns, and best practices suggestions",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.py",
      "tests/**/*.py",
      "examples/**/*.py",
      "*.py"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified Python code for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for Python best practices including PEP 8 compliance, proper error handling, type hints, docstrings\n4. **Performance**: Identify potential performance optimizations without changing functionality\n5. **Readability**: Suggest improvements for variable naming, code organization, and clarity\n6. **Maintainability**: Recommend changes that would make the code easier to maintain and extend\n\nFor each suggestion:\n- Explain WHY the change would be beneficial\n- Provide a specific code example if applicable\n- Prioritize suggestions by impact (high/medium/low)\n- Ensure all suggestions maintain existing functionality\n\nConsider the project context: This is a Python MCP server for Amazon Managed Prometheus with FastMCP, AWS SDK, and modern Python packaging (uv, pyproject.toml). The codebase uses Pydantic for data validation and follows modern Python practices."
  }
}